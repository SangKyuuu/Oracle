/*
    날짜:2025/07/15
    이름:최상규
    내용:3장 SQL 고급
*/

CREATE TABLE EMP(
    EMPNO NUMBER(4) PRIMARY KEY NOT NULL,
    NAME VARCHAR2(10) NOT NULL,
    GENDER CHAR(1) NOT NULL,
    JOB VARCHAR2(10) NOT NULL,
    DEPNO NUMBER(2) DEFAULT NULL,
    REGDATE DATE NOT NULL
);

CREATE TABLE DEPT(
    DEPTNO NUMBER(2) PRIMARY KEY NOT NULL,
    DNAME VARCHAR2(10) NOT NULL,
    DTEL VARCHAR2(12) NOT NULL
);

CREATE TABLE SALE(
    NO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    EMPNO NUMBER(4) NOT NULL,
    YEAR NUMBER(4) NOT NULL,
    MONTH NUMBER(2) NOT NULL,
    PRICE NUMBER(10) DEFAULT NULL
);

// 직원테이블 데이터 입력
INSERT INTO EMP VALUES (1001, '김유신', 'M', '사원', 10, SYSDATE);
INSERT INTO EMP VALUES (1002, '김춘추', 'M', '대리', 20, SYSDATE);
INSERT INTO EMP VALUES (1003, '장보고', 'M', '과장', 10, SYSDATE);
INSERT INTO EMP VALUES (1004, '강감찬', 'M', '부장', 30, SYSDATE);
INSERT INTO EMP VALUES (1005, '신사임당', 'F', '대리', 20, SYSDATE);
INSERT INTO EMP VALUES (1006, '이황', 'M', '사원', 40, SYSDATE);
INSERT INTO EMP VALUES (1007, '이이', 'M', '과장', 20, SYSDATE);
INSERT INTO EMP VALUES (1008, '이순신', 'M', '사원', NULL, SYSDATE);
INSERT INTO EMP VALUES (1009, '허난설헌', 'F', '사원', NULL, SYSDATE);
INSERT INTO EMP VALUES (1010, '정약용', 'M', '대리', 50, SYSDATE);

// 부서 테이블 데이터 입력
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (10, '영업1부', '051-511-1000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (20, '영업2부', '051-511-2000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (30, '영업3부', '051-511-3000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (40, '영업4부', '051-511-4000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (50, '영업지원부', '051-511-5000');
SELECT * FROM DEPT;

// 매출 테이블 데이터 입력
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1001, 2023, 1, 98100);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1002, 2023, 1, 136000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1003, 2023, 1, 80000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1004, 2023, 1, 78000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1005, 2023, 1, NULL);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1001, 2023, 2, 23500);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1002, 2023, 2, 126000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1003, 2023, 2, 18500);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1005, 2023, 2, 19000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1010, 2023, 2, 53000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1001, 2024, 1, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1002, 2024, 1, 109000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1003, 2024, 1, 80000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1004, 2024, 1, NULL);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1007, 2024, 1, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1002, 2024, 2, 160000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1003, 2024, 2, 101000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1004, 2024, 2, 43000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1005, 2024, 2, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH,PRICE) VALUES (1006, 2024, 2, 109000);
SELECT * FROM SALE;

//실습하기 2-1
SELECT * FROM EMP WHERE NAME != '김춘추';
SELECT * FROM EMP WHERE NAME <> '김춘추';

SELECT * FROM EMP WHERE JOB = '사원' or  job = '대리';
SELECT * FROM EMP WHERE JOB IN ('사원', '대리');

SELECT * FROM EMP WHERE NAME LIKE '김%';
SELECT * FROM EMP WHERE NAME LIKE '%신';
SELECT * FROM EMP WHERE NAME LIKE '이_';
SELECT * FROM EMP WHERE NAME LIKE '이__';
SELECT * FROM EMP WHERE NAME LIKE '_순%';
--SELECT * FROM EMP WHERE HP LIKE '010-1111%';
SELECT * FROM EMP WHERE DEPNO IS NULL;
SELECT * FROM EMP WHERE DEPNO IS NOT NULL;
SELECT * FROM EMP WHERE EMPNO >= 1005;
SELECT * FROM DEPT WHERE DEPTNO = 10;
SELECT * FROM DEPT WHERE DNAME = '영업지원부';
SELECT * FROM DEPT WHERE DTEL LIKE '%30%';
SELECT * FROM DEPT WHERE DEPTNO IN (10, 30);
SELECT * FROM DEPT WHERE DNAME LIKE '영업_ _';
SELECT * FROM SALE WHERE PRICE > 50000;
SELECT * FROM SALE WHERE price >= 50000 AND price < 100000 AND month = 1;
SELECT * FROM SALE WHERE price BETWEEN 50000 AND 100000;
SELECT * FROM SALE WHERE price NOT BETWEEN 50000 AND 100000;
SELECT * FROM SALE WHERE year = 2024;
SELECT * FROM SALE WHERE YEAR = 2024 AND MONTH = 2;
SELECT * FROM SALE WHERE MONTH IN (1, 2);


//실습하기 2-2
SELECT * FROM SALE ORDER BY PRICE;
SELECT * FROM SALE ORDER BY PRICE ASC;
SELECT * FROM SALE ORDER BY PRICE DESC;
SELECT * FROM EMP ORDER BY NAME;
SELECT * FROM EMP ORDER BY NAME DESC;
SELECT * FROM EMP ORDER BY REGDATE;
SELECT * FROM EMP ORDER BY REGDATE DESC;
SELECT * FROM SALE WHERE PRICE > 50000 ORDER BY PRICE DESC;
SELECT * FROM SALE
WHERE PRICE > 50000
ORDER BY YEAR, MONTH, PRICE DESC;

SELECT * FROM SALE FETCH FIRST 3 ROW ONLY;
SELECT * FROM SALE OFFSET 0 ROWS FETCH NEXT 3 ROWS ONLY;
SELECT * FROM SALE OFFSET 1 ROWS FETCH NEXT 2 ROWS ONLY;
SELECT * FROM SALE OFFSET 5 ROWS FETCH NEXT 3 ROWS ONLY;
SELECT * FROM Sale ORDER BY PRICE DESC OFFSET 3 ROWS FETCH NEXT 5 ROWS ONLY;
SELECT * FROM Sale WHERE price < 50000 ORDER BY price DESC FETCH FIRST 3 ROWS ONLY;
SELECT * FROM Sale WHERE price > 50000 ORDER BY year DESC, month, price DESC FETCH FIRST 5 ROWS ONLY;

//실습하기 2-3
SELECT DISTINCT DEPNO FROM EMP;
SELECT DISTINCT JOB, DEPNO FROM EMP;
SELECT EMPNO AS 사번 , NAME AS 이름, GENDER AS 성별 FROM EMP;
SELECT EMPNO E , NAME N, GENDER G FROM EMP;


//실습하기 3-1 다양한 SQL 숫자 함수 실습
SELECT SUM(PRICE) AS 합계 FROM Sale;
SELECT AVG(PRICE) AS 평균 FROM Sale;
SELECT MAX(PRICE) AS "최대값" FROM Sale;
SELECT MIN(PRICE) AS "최소값" FROM Sale;
SELECT COUNT(*) AS 직원수 FROM EMP;
SELECT COUNT(EMPNO) AS 직원수 FROM EMP;
SELECT COUNT(DEPNO) AS "부서수" FROM EMP;

SELECT CEIL(1.2) FROM DUAL;
SELECT CEIL(1.8) FROM DUAL;
SELECT FLOOR(1.2) FROM DUAL;
SELECT FLOOR(1.8) FROM DUAL;
SELECT ROUND(1.2) FROM DUAL;
SELECT ROUND(1.8) FROM DUAL;
SELECT DBMS_RANDOM.VALUE FROM DUAL;
SELECT CEIL(DBMS_RANDOM.VALUE * 10) FROM DUAL;

//실습하기 3-2. 다양한 SQL 문자 함수 실습
SELECT 'HELLO ORACLE1' , LENGTH('HELLO ORACLE!') FROM DUAL;

SELECT 
    'HELLO ORACLE!' , 
    SUBSTR('HELLO ORACLE!', 1,3),
    SUBSTR('HELLO ORACLE!', 3,2),
    SUBSTR('HELLO ORACLE!', 5)
    FROM DUAL;

SELECT
    INSTR('HELLO ORACLE!', 'L') AS INSTR_1,
    INSTR('HELLO ORACLE!', 'L', -1) AS INSTR2
FROM DUAL;

SELECT '010-1234-5678', REPLACE('010-1234-5678', '-', '') FROM DUAL;

SELECT 
    LPAD('ORACLE', 10, '#') AS LPAD,
    RPAD('ORACLE', 10, '*') AS RPAD
FROM DUAL;

SELECT CONCAT(EMPNO, NAME) FROM EMP WHERE NAME ='이순신';
SELECT EMPNO || NAME FROM EMP WHERE NAME = '정약용';

SELECT
    '[ _Oracle_ ]' AS BEFORE,
    '['|| TRIM(' _Oracle_ ') || ']' AS TRIM
FROM DUAL;

//실습하기 3-3. 다양한 SQL 날짜함수 실습
--SYSDATE
SELECT 
    SYSDATE,
    SYSDATE -1,
    SYSDATE +1
FROM DUAL;

--몇 개월 이후 날짜 조회
SELECT
    ADD_MONTHS(SYSDATE, 1),
    ADD_MONTHS(SYSDATE, -1)
FROM DUAL;

-- 두 날짜 간 개월 수 계산
SELECT
    MONTHS_BETWEEN(DATE '2025-07-13', DATE '2024-07-13') AS 개월차
FROM DUAL;

-- NEXT_DAY(D, '요일') : D 이후의 특정 요일 날짜
SELECT
    NEXT_DAY(SYSDATE, '월요일') AS 다음_월요일
FROM DUAL;

//실습하기 3-4. 다양한 SQL 기타함수 실습.

SELECT 
    TO_CHAR(SYSDATE, 'YYYY') AS YYYY,
    TO_CHAR(SYSDATE, 'MM') AS MM,
    TO_CHAR(SYSDATE, 'DD') AS DD,
    TO_CHAR(SYSDATE, 'HH24') AS HH,
    TO_CHAR(SYSDATE, 'MI') AS MI,
    TO_CHAR(SYSDATE, 'SS') AS SS,
    TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS 날짜
FROM DUAL;
INSERT INTO EMP VALUES(1011, '안중근', 'M', '부장', 30, TO_CHAR(SYSDATE, 'YYYY/MM/DD'));
SELECT * FROM EMP WHERE NAME ='안중근';

SELECT 
    TO_DATE('20250714', 'YYYY/MM/DD') AS 날짜1,
    TO_DATE('250714', 'YY-MM-DD') AS 날짜2,
    TO_DATE(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS 날짜3
FROM DUAL;

INSERT INTO EMP VALUES(1012,'유관순','F','차장',20,SYSDATE);
INSERT INTO EMP VALUES(1013,'윤봉길','M','과장',30,TO_DATE(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'));
SELECT * FROM EMP WHERE empno = 1012;

--NVL, NVL2 : NULL 체크 함수
SELECT
    NO,
    EMPNO,
    YEAR,
    MONTH,
    NVL(PRICE, 0)
FROM SALE;

SELECT
    EMPNO,
    NAME,
    GENDER,
    JOB,
    NVL2(DEPNO, '정규직', '비정규직')
FROM EMP;


-- 실습 4-1 GROUP BY HAVING
SELECT EMPNO FROM SALE GROUP BY EMPNO;
SELECT YEAR FROM SALE GROUP BY YEAR;

SELECT EMPNO, YEAR FROM SALE GROUP BY EMPNO, YEAR;

SELECT EMPNO, COUNT(*) AS 판매건수 FROM SALE GROUP BY EMPNO;
SELECT EMPNO, SUM(PRICE) AS 합계 FROM SALE GROUP BY EMPNO;

SELECT EMPNO, YEAR, SUM(PRICE) AS 합계 FROM SALE GROUP BY EMPNO, YEAR;


//실습하기 4-2. 그룹화 조건 실습

SELECT EMPNO, YEAR, SUM(PRICE) AS 합계 
FROM SALE 
WHERE PRICE >= 50000 
GROUP BY EMPNO, YEAR 
HAVING SUM(PRICE) >= 200000
ORDER BY 합계 DESC;

//실습하기 5-1. 집합
SELECT EMPNO, MONTH, PRICE FROM SALE WHERE YEAR= 2023
UNION --중복제거
SELECT EMPNO, MONTH, PRICE FROM SALE WHERE YEAR= 2024;

SELECT EMPNO, MONTH, PRICE FROM SALE WHERE YEAR= 2023
UNION ALL --중복제거 X
SELECT EMPNO, MONTH, PRICE FROM SALE WHERE YEAR= 2024;

SELECT EMPNO, YEAR, SUM(PRICE) AS 합계
FROM SALE
WHERE YEAR = 2023
GROUP BY EMPNO, YEAR
UNION
SELECT EMPNO, YEAR, SUM(PRICE) AS 합계
FROM SALE
WHERE YEAR = 2024
GROUP BY EMPNO, YEAR
ORDER BY YEAR ASC, 합계 DESC;

// 실습하기 5-2 
SELECT EMPNO FROM SALE WHERE YEAR = 2023
INTERSECT -- 교집합
SELECT EMPNO FROM SALE WHERE YEAR = 2024;

// 실습하기 5-3
SELECT EMPNO FROM SALE WHERE YEAR = 2023
MINUS -- 차집합 (왼쪽이 기준)
SELECT EMPNO FROM SALE WHERE YEAR = 2024;

// 실습하기 6-1 JOIN

SELECT *
FROM EMP E
JOIN DEPT D
USING (DEPTNO); -- 조인하려는 두 테이블의 동일한 컬럼명

SELECT *
FROM EMP E
JOIN DEPT D
ON E.DEPNO = D.DEPTNO;

SELECT *
FROM EMP E, DEPT D
WHERE E.DEPNO = D.DEPTNO;

SELECT 
    S.NO,
    S.EMPNO,
    E.NAME,
    E.JOB,
    E.REGDATE,
    E.DEPNO,
    D.DNAME
FROM SALE S
JOIN EMP E
ON S.EMPNO = E.EMPNO
JOIN DEPT D 
ON E.DEPNO = D.DEPTNO
WHERE PRICE > 100000 AND YEAR = 2024
ORDER BY S.PRICE DESC;

// 실습 6-2 LEFT,RIGHT JOIN
SELECT *
FROM SALE S
LEFT JOIN EMP E
ON S.EMPNO = E.EMPNO;
-- 조인되는 테이블에 데이터가 없어도 한쪽 테이블에 데이터가 있으면 조회된다
